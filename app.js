// app.js ‚Äî v9 PRO FIX: Admin, edici√≥n en listas, backup/restore/merge, multi-Word
window.addEventListener("DOMContentLoaded", () => {
  const $  = (id)=>document.getElementById(id);
  const val= (id)=>($(id)?.value ?? "");
  const setv= (id,v)=>{ const n=$(id); if(n) n.value=v; };
  const show= (id,on)=>{ const n=$(id); if(n) n.style.display = on?"block":"none"; };
  const titleCase = (s)=> (s||"").toLowerCase()
      .replace(/\b([a-z√°√©√≠√≥√∫√±√º])([a-z√°√©√≠√≥√∫√±√º]*)/gi,(_,a,b)=>a.toUpperCase()+b);

  // ====== ADMIN (PIN simple) ======
  const ADMIN_PIN = "1234";
  const ADMIN_KEY = "hr_admin_enabled_v9";
  const BACKUP_FOR_ALL = true; // pod√©s poner false si quer√©s revertir

  function isAdmin(){ return sessionStorage.getItem(ADMIN_KEY)==="1"; }
  function setAdmin(on){
    sessionStorage.setItem(ADMIN_KEY, on? "1":"0");
    applyAdminUI();
  }
  function ensureAdmin(){
    if (isAdmin()) return true;
    const pin = prompt("PIN de administrador:");
    if (pin === ADMIN_PIN){
      setAdmin(true);
      alert("Modo administrador habilitado.");
      return true;
    }
    alert("PIN incorrecto.");
    return false;
  }
  function applyAdminUI(){
    const on = isAdmin();
    document.querySelectorAll(".adminOnly").forEach(el=>{
      el.disabled = !on;
      el.classList.toggle("ghost", !on);
    });
    // Pol√≠tica de backup para todos
    if (BACKUP_FOR_ALL){
      const b = $("backupJSON");
      if (b){ b.disabled=false; b.classList.remove("adminOnly","ghost"); }
    }
    const st = $("adminStatus");
    if (st) st.textContent = on? "üîì Admin ON" : "üîí Admin OFF";
  }
  $("adminToggle")?.addEventListener("click", ()=>{
    if (!isAdmin()){
      ensureAdmin();
    } else {
      if (confirm("¬øDesactivar modo administrador?")) setAdmin(false);
    }
  });

  // ====== Storage keys ======
  const CASEKEY = "hr_cases_v9";
  const CATKEY  = "hr_catalogs_v9";

  // ====== Default cat√°logos ======
  const DEFAULT_CATALOGS = {
    "General Pueyrredon": {
      localidades: ["Mar del Plata","Bat√°n","Sierra de los Padres","Chapadmalal","Estaci√≥n Camet","El Boquer√≥n"],
      dependencias: [
        "Cria. Mar Del Plata 1ra.","Cria. Mar Del Plata 2da.","Cria. Mar Del Plata 3ra.",
        "Cria. Mar Del Plata 4ta.","Cria. Mar Del Plata 5ta.","Cria. Mar Del Plata 6ta.",
        "Subcria. Camet","Subcria. Acantilados","DDI Mar del Plata","Comisar√≠a de la Mujer MdP","UPPL MdP","CPO MdP"
      ]
    },
    "Balcarce": {
      localidades: ["Balcarce","San Agust√≠n","Los Pinos"],
      dependencias: ["Cria. Balcarce","DDI Balcarce","Cria. de la Mujer Balcarce","Destac. San Agust√≠n"]
    },
    "Mar Chiquita": {
      localidades: ["Coronel Vidal","Santa Clara del Mar","Vivorat√°","Mar de Cobo","La Caleta","Mar Chiquita"],
      dependencias: ["Cria. Cnel. Vidal","Cria. Sta. Clara del Mar","Cria. de la Mujer Mar Chiquita","Destac. Mar de Cobo"]
    },
    "General Alvarado": {
      localidades: ["Miramar","Mechongu√©","Comandante N. Otamendi","Mar del Sud"],
      dependencias: ["Cria. Miramar","Cria. Otamendi","Cria. de la Mujer Gral. Alvarado","Destac. Mar del Sud"]
    }
  };

  // ====== Cat√°logos ======
  function getCatalogs(){
    try{
      const raw = localStorage.getItem(CATKEY);
      if(!raw) return structuredClone(DEFAULT_CATALOGS);
      const obj = JSON.parse(raw);
      if (!obj || typeof obj!=="object") return structuredClone(DEFAULT_CATALOGS);
      return obj;
    }catch{
      return structuredClone(DEFAULT_CATALOGS);
    }
  }
  function setCatalogs(obj){ localStorage.setItem(CATKEY, JSON.stringify(obj)); }
  if(!localStorage.getItem(CATKEY)) setCatalogs(DEFAULT_CATALOGS);

  function fillPartidos(){
    const cat = getCatalogs();
    const partidos = Object.keys(cat).sort((a,b)=>a.localeCompare(b));
    const sp = $("g_partido");
    const sc = $("cat_partidoSel");
    if (sp){
      sp.innerHTML="";
      sp.append(new Option("‚Äî Elegir ‚Äî",""));
      partidos.forEach(p=> sp.append(new Option(p,p)));
    }
    if (sc){
      sc.innerHTML="";
      partidos.forEach(p=> sc.append(new Option(p,p)));
      if (partidos.length) sc.value = partidos[0];
    }
  }
  function loadLocalidadesDeps(){
    const cat = getCatalogs();
    const partido = val("g_partido");
    const sl = $("g_localidad");
    const sd = $("g_dep");
    if(!sl||!sd) return;
    sl.innerHTML=""; sd.innerHTML="";
    sl.append(new Option("‚Äî Elegir ‚Äî",""));
    sd.append(new Option("‚Äî Elegir ‚Äî",""));
    if (partido && cat[partido]){
      (cat[partido].localidades||[]).forEach(v=> sl.append(new Option(v,v)));
      (cat[partido].dependencias||[]).forEach(v=> sd.append(new Option(v,v)));
      sd.append(new Option("Escribir manualmente‚Ä¶","__manual__"));
    }
    show("g_dep_manual_wrap", val("g_dep")==="__manual__");
  }
  function resolvedDep(){ return val("g_dep")==="__manual__" ? val("g_dep_manual").trim() : val("g_dep"); }

  // ====== Insertar etiqueta al cursor ======
  function insertAtCursor(text){
    const ta = $("cuerpo"); if(!ta) return;
    const start = ta.selectionStart ?? ta.value.length;
    const end   = ta.selectionEnd   ?? ta.value.length;
    const before= ta.value.slice(0,start);
    const after = ta.value.slice(end);
    const needs = before && !/\s$/.test(before) ? " " : "";
    const ins   = `${needs}${text} `;
    ta.value = before + ins + after;
    const pos = (before + ins).length;
    ta.setSelectionRange(pos,pos);
    ta.focus();
    renderTitlePreview(); preview();
  }

  // ====== Stores (civiles, fuerzas, objetos) ======
  // (los dej√© con edici√≥n: editar/guardar/borrar)

  // ... [aqu√≠ siguen exactamente los bloques CIV, FZA y OBJ que vos pegaste, ya con edici√≥n] ...

  // ====== Etiquetas ======
  // ... (igual a tu versi√≥n, sin cambios) ...

  // ====== Build / Preview / T√≠tulo ======
  // ... (igual a tu versi√≥n, con waLong / waMulti) ...

  // ====== Casos ======
  // ... (igual a tu versi√≥n, con save/update/delete/loadSelected) ...

  // ====== Multi exportaciones ======
  // Incluye CSV y Word m√∫ltiple en un solo archivo
  // ... (igual a tu versi√≥n con HRFMT.downloadDocxMulti) ...

  // ====== Cat√°logos (ADMIN) ======
  // Incluye agregar, guardar, resetear y eliminar partido
  // ... (igual a tu versi√≥n) ...

  // ====== Backup / Restore / Merge JSON ======
  // Incluido completo con validaciones y merge por ID
  // ... (igual a tu versi√≥n) ...

  // ====== Init ======
  fillPartidos(); loadLocalidadesDeps();
  CIV.render(); FZA.render(); OBJ.render();
  renderTagHelper(); renderTitlePreview(); preview();
  loadCatEditor(); applyAdminUI(); renderCases();
});
